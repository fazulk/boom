name: Release

on: workflow_dispatch 

jobs:  
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    environment: production
    steps:    
      - name: build
        run: echo "doing into" 
      # - uses: actions/checkout@v2  
      #   with:
      #     token: ${{ secrets.BUILD_RELEASE }}             

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)" 

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'

      # - uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       **/node_modules
      #       ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - name: Install packages
      #   run: yarn install --frozen-lockfile

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_GH_USER_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_GH_USER_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2
      #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      #     role-session-name: UploadQuizBuilderGHAction
      #     role-duration-seconds: 1200
            
      # - name: Build and deploy production        
      #   run: |          
      #     yarn deploy --mode production  

  publish_release:
      name: Tag and Publish
      runs-on: ubuntu-latest      
      needs: build_and_deploy
      steps:      
      - uses: actions/checkout@v2  
        with:
          token: ${{ secrets.BUILD_RELEASE }}       

      - uses: release-drafter/release-drafter@v5    
        id: pre_release           
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}                     
      
      - name: Update package.json version
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: version
          value: ${{ steps.pre_release.outputs.tag_name }}        

      - name: commit and push package.json
        run: |
         git config user.name github-actions
         git config user.email github-actions@github.com        
         git add -A
         git commit -m "Updated version to ${{ steps.pre_release.outputs.tag_name }}"         
         git push

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.pre_release.outputs.id }}  

        # - name: 'post to notion'
        #   run: node ./.github/post_to_notion.js --notion_key=${{ secrets.NOTION_KEY }} --databaseId="${{ secrets.NOTION_CHANGELOG_DB }}" --repo="${{ github.repository }}" --release=${{ steps.pre_release.outputs.tag_name }} --changelog="${{ steps.pre_release.outputs.body }}"
